(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{416:function(e,t,a){"use strict";a.r(t);var _=a(2),s=Object(_.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"_1-webpack-打包的目的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-webpack-打包的目的"}},[e._v("#")]),e._v(" 1. webpack 打包的目的")]),e._v(" "),t("p",[e._v("运行效率的提高")]),e._v(" "),t("p",[e._v("对一些高级技术会自动转换")]),e._v(" "),t("h3",{attrs:{id:"_2-webpack-打包流程-bebel-是做什么的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-webpack-打包流程-bebel-是做什么的"}},[e._v("#")]),e._v(" 2. webpack 打包流程，bebel 是做什么的 ***")]),e._v(" "),t("p",[e._v("webpack 会把 js css image 看作一个模块，用 import/require 引入")]),e._v(" "),t("p",[e._v("找到入口文件，通过入口文件找到关联饿依赖文件，把他们打包到一起")]),e._v(" "),t("p",[e._v("把 bundle 文件，拆分成多个小的文件，异步按需加载所需要的文件")]),e._v(" "),t("p",[e._v("如果一个被多个文件引用，打包时只会生成一个文件")]),e._v(" "),t("p",[e._v("如果引用的文件没有调用，不会打包，如果引入的变量和方法没有调用也不会打包")]),e._v(" "),t("p",[e._v("对于多个入口文件，加入引入了相同的代码，可以用插件把他抽离到公共文件中")])])}),[],!1,null,null,null);t.default=s.exports}}]);